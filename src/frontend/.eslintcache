[{"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\index.js":"1","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\App.js":"2","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\home.js":"3","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Register\\RegisterUser.js":"4","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Register\\RegisterSelect.js":"5","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Register\\RegisterOrganisation.js":"6","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Register\\RegisterDoctor.js":"7","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Login\\LoginForm.js":"8","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\orgDashboard.js":"9","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\auth\\PrivateRoute.js":"10","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\patientDashboard.js":"11","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\doctorDashboard.js":"12","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Backend.js":"13","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Data.js":"14","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Landing Page\\Footer.js":"15","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Landing Page\\HeroSection.js":"16","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Landing Page\\Navbar.js":"17","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Landing Page\\Button.js":"18","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\CallingApi\\patientapi.js":"19","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\DoctorUploadPanal.js":"20","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\Prescription.js":"21","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\Graph.js":"22","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Checker.js":"23","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\patientPrescription.js":"24","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\PatientGraph.js":"25","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\OrgGraph.js":"26","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\OrgAllDetails.js":"27","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\OrgPrescription.js":"28","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\previousPrescriptions.js":"29"},{"size":566,"mtime":1613144302142,"results":"30","hashOfConfig":"31"},{"size":2921,"mtime":1613404964018,"results":"32","hashOfConfig":"31"},{"size":535,"mtime":1612976666426,"results":"33","hashOfConfig":"31"},{"size":3301,"mtime":1612976666421,"results":"34","hashOfConfig":"31"},{"size":858,"mtime":1612976666418,"results":"35","hashOfConfig":"31"},{"size":4433,"mtime":1612976666416,"results":"36","hashOfConfig":"31"},{"size":4467,"mtime":1612976666414,"results":"37","hashOfConfig":"31"},{"size":2812,"mtime":1612976666410,"results":"38","hashOfConfig":"31"},{"size":7340,"mtime":1613429737528,"results":"39","hashOfConfig":"31"},{"size":575,"mtime":1612976632623,"results":"40","hashOfConfig":"31"},{"size":15661,"mtime":1613671320136,"results":"41","hashOfConfig":"31"},{"size":8454,"mtime":1613069726691,"results":"42","hashOfConfig":"31"},{"size":48,"mtime":1612976632606,"results":"43","hashOfConfig":"31"},{"size":1262,"mtime":1612976666395,"results":"44","hashOfConfig":"31"},{"size":3866,"mtime":1612976666402,"results":"45","hashOfConfig":"31"},{"size":1753,"mtime":1612976666406,"results":"46","hashOfConfig":"31"},{"size":2590,"mtime":1612976666408,"results":"47","hashOfConfig":"31"},{"size":811,"mtime":1612976666398,"results":"48","hashOfConfig":"31"},{"size":4873,"mtime":1613669519003,"results":"49","hashOfConfig":"31"},{"size":2941,"mtime":1613071948476,"results":"50","hashOfConfig":"31"},{"size":4879,"mtime":1613654723133,"results":"51","hashOfConfig":"31"},{"size":2628,"mtime":1613670850353,"results":"52","hashOfConfig":"31"},{"size":2454,"mtime":1613144130458,"results":"53","hashOfConfig":"31"},{"size":1865,"mtime":1613402698028,"results":"54","hashOfConfig":"31"},{"size":744,"mtime":1613671361524,"results":"55","hashOfConfig":"31"},{"size":926,"mtime":1613670981322,"results":"56","hashOfConfig":"31"},{"size":2516,"mtime":1613671044525,"results":"57","hashOfConfig":"31"},{"size":1927,"mtime":1613428659605,"results":"58","hashOfConfig":"31"},{"size":1975,"mtime":1613411798870,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1qu48sp",{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"127","usedDeprecatedRules":"62"},"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\index.js",[],["128","129"],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\App.js",["130","131","132"],"import React from 'react'\r\nimport {\r\n  Link,\r\n  Route,\r\n  Redirect,\r\n  BrowserRouter as Router,\r\n  withRouter,\r\n  Switch,\r\n} from 'react-router-dom'\r\nimport RegisterUser from './Register/RegisterUser'\r\nimport RegisterDoctor from './Register/RegisterDoctor'\r\nimport RegisterOrganisation from './Register/RegisterOrganisation'\r\nimport LoginForm from './Login/LoginForm'\r\nimport Home from './home'\r\nimport PrivateRoute from './auth/PrivateRoute'\r\nimport doctorDashboard from './Dashboards/doctorDashboard'\r\nimport OrgDashboard from './Dashboards/orgDashboard'\r\nimport PatientDashboard from './Dashboards/patientDashboard'\r\nimport RegisterSelect from './Register/RegisterSelect'\r\nimport DoctorUploadPanal from \"./Dashboards/DoctorUploadPanal\"\r\nimport Prescription from \"./Dashboards/Prescription\"\r\nimport Graph from \"./Dashboards/Graph\"\r\nimport PatientPrescription from \"./Dashboards/patientPrescription\"\r\nimport PatientGraph from \"./Dashboards/PatientGraph\"\r\nimport OrgGraph from \"./Dashboards/OrgGraph\"\r\nimport OrgAllDetails from \"./Dashboards/OrgAllDetails\"\r\nimport OrgPrescription from \"./Dashboards/OrgPrescription\"\r\nimport PreviousPrescriptions from \"./Dashboards/previousPrescriptions\"\r\n\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/' component={Home} />\r\n      <Route exact path='/register' component={RegisterSelect} />\r\n      <Route exact path='/users/register/patient' component={RegisterUser} />\r\n      <Route exact path='/users/register/doctor' component={RegisterDoctor} />\r\n      <Route exact path = '/doctor/AddingFeatures' component = {DoctorUploadPanal} ></Route>\r\n      <Route exact path = '/doctor/AddingFeatures/prescription' component = {Prescription} ></Route>\r\n      <Route exact path = '/doctor/AddingFeatures/graph' component = {Graph} ></Route>\r\n      <Route exact path = '/patient/dashboard/prescription' component = {PatientPrescription} ></Route>\r\n      <Route exact path = '/patient/dashboard/graph' component = {PatientGraph} ></Route>\r\n      <Route exact path = '/org/dashboard/graph' component = {OrgGraph} ></Route>\r\n      <Route exact path = '/org/allDetails' component = {OrgAllDetails} ></Route>\r\n      <Route exact path = '/org/dashboard/prescription' component = {OrgPrescription} ></Route>\r\n      <Route exact path = '/doctor/previousPrescriptions' component = {PreviousPrescriptions} ></Route>\r\n\r\n    \r\n\r\n      <Route\r\n        exact\r\n        path='/users/register/org'\r\n        component={RegisterOrganisation}\r\n      />\r\n      <PrivateRoute\r\n        exact\r\n        path='/patient/dashboard'\r\n        component={PatientDashboard}\r\n      />\r\n      <PrivateRoute exact path='/org/dashboard' component={OrgDashboard} />\r\n      <PrivateRoute\r\n        exact\r\n        path='/doctor/dashboard'\r\n        component={doctorDashboard}\r\n      />\r\n      <Route exact path='/users/login' component={LoginForm} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default withRouter(App)\r\n","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\home.js",[],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Register\\RegisterUser.js",[],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Register\\RegisterSelect.js",[],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Register\\RegisterOrganisation.js",[],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Register\\RegisterDoctor.js",[],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Login\\LoginForm.js",["133"],"import React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport './styles.css'\r\nimport { signin, authenticate, isAutheticated } from '../CallingApi/patientapi'\r\nimport { signout } from '../CallingApi/patientapi'\r\nfunction LoginForm(props) {\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    password: '',\r\n    error: '',\r\n    success: '',\r\n    performRedirect: false,\r\n  })\r\n\r\n  const { user } = isAutheticated()\r\n  console.log('From is auth ', user)\r\n\r\n  const onchange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value })\r\n  }\r\n  const { email, password, error, success, performRedirect } = values\r\n  const onsubmit = (e) => {\r\n    e.preventDefault()\r\n    if (email && password) {\r\n      signin({ email, password }, props.location.pathname)\r\n        .then((data) => {\r\n          console.log(data)\r\n          if (data.msg) {\r\n            setValues({ ...values, error: data.msg })\r\n          } else {\r\n            authenticate(data, () => {\r\n              setValues({ ...values, performRedirect: true })\r\n            })\r\n          }\r\n        })\r\n        .catch((err) => console.log(err.message))\r\n    } else {\r\n      alert('Enter all details')\r\n    }\r\n  }\r\n  const performRedirects = () => {\r\n    if (performRedirect) {\r\n      if (user.patient_name) {\r\n        return <Redirect to='/patient/dashboard' />\r\n      } else if (user.org_name) {\r\n        return <Redirect to='/org/dashboard' />\r\n      } else if (user.doctor_name) {\r\n        return <Redirect to='/doctor/dashboard' />\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className='wrapper'>\r\n      <div className='title'>Login here</div>\r\n      <div className='form'>\r\n        <div className='inputfield'>\r\n          <label>Email</label>\r\n          <input\r\n            required\r\n            name='email'\r\n            onChange={onchange}\r\n            value={email}\r\n            className='input'\r\n            type='email'\r\n          />\r\n        </div>\r\n        <div className='inputfield'>\r\n          <label>Password</label>\r\n          <input\r\n            name='password'\r\n            onChange={onchange}\r\n            value={password}\r\n            type='password'\r\n            className='input'\r\n          />\r\n        </div>\r\n        <div className='inputfield'>\r\n          <button onClick={onsubmit} className='btn'>\r\n            Submit\r\n          </button>\r\n        </div>\r\n        <Link to='/register'>\r\n          {' '}\r\n          <div className='inputfield'>\r\n            <p>Not Registered? Click Here</p>\r\n          </div>{' '}\r\n        </Link>\r\n        {error ? (\r\n          <div id='error_message'>{error}</div>\r\n        ) : (\r\n          <div id='error_message'>{success}</div>\r\n        )}\r\n\r\n        {performRedirects()}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\orgDashboard.js",["134"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { signout, getAllPatientDetails } from '../CallingApi/patientapi'\r\nimport { FaBars, FaTimes } from 'react-icons/fa'\r\nimport { IconContext } from 'react-icons/lib'\r\nimport { Button } from '../Landing Page/Button'\r\nimport '../Landing Page/Navbar.css'\r\nimport './styles.css'\r\n\r\nfunction OrgDashboard({ history }) {\r\n  const [PatientBasicDetails, setPatientBasicDetails] = useState([])\r\n  const [OrgDetails, setOrgDetails] = useState('')\r\n  const [values, setValues] = useState('')\r\n  const [p_dets, setP_dets] = useState([])\r\n  const [displayDetails, setDisplayDetails] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const doc = JSON.parse(localStorage.getItem('jwt'))\r\n    setOrgDetails(doc.user.org_name)\r\n    getAllPatientDetails().then((res) => {\r\n        setPatientBasicDetails(res)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n  console.log(PatientBasicDetails)\r\n\r\n  const onSubmit = () => {\r\n    const patDets = PatientBasicDetails\r\n    console.log(patDets.data)\r\n\r\n    const pat_Index = patDets.data.filter((data, i) => {\r\n      console.log(data.userinfo.UID,values)\r\n      if (values === \"\" +  data.userinfo.UID) {\r\n        console.log(\"Found\")\r\n        return data.userinfo\r\n      }\r\n    })\r\n\r\n    console.log(pat_Index)\r\n\r\n    if (pat_Index[0]) {\r\n      setP_dets(pat_Index[0])\r\n      if (pat_Index[0].userinfo !== '' + undefined) {\r\n        setDisplayDetails(true)\r\n        history.push(\"/org/allDetails\",pat_Index[0])\r\n      }\r\n    } else {\r\n      alert('No Pateint Found with this Unique ID')\r\n    }\r\n\r\n    //console.log(data.userinfo.UID);\r\n    //   patDets.data.map((data,i) => {\r\n    //       console.log(data);\r\n    //   } )\r\n  }\r\n\r\n  console.log(OrgDetails)\r\n\r\n  //for navbar\r\n  const [click, setClick] = useState(false)\r\n  const [button, setButton] = useState(true)\r\n\r\n  const handleClick = () => setClick(!click)\r\n  const closeMobileMenu = () => setClick(false)\r\n\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 960) {\r\n      setButton(false)\r\n    } else {\r\n      setButton(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    showButton()\r\n    window.addEventListener('resize', showButton)\r\n    return () => {\r\n      window.removeEventListener('resize', showButton)\r\n    }\r\n  }, [])\r\n  //\r\n\r\n  return (\r\n    <div>\r\n      <IconContext.Provider value={{ color: '#fff' }}>\r\n        <nav className='navbar'>\r\n          <div className='navbar-container container'>\r\n            <Link\r\n              to='/patient/dashboard'\r\n              className='navbar-logo'\r\n              onClick={closeMobileMenu}>\r\n              {OrgDetails}'s Dashboard\r\n            </Link>\r\n            <div className='menu-icon' onClick={handleClick}>\r\n              {click ? <FaTimes /> : <FaBars />}\r\n            </div>\r\n            <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n              <li className='nav-btn'>\r\n                {button ? (\r\n                  <Button\r\n                    buttonStyle='btn--outline'\r\n                    onClick={() => {\r\n                      signout(() => {\r\n                        history.push('/users/login')\r\n                      })\r\n                    }}>\r\n                    Sign Out\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    buttonStyle='btn--outline'\r\n                    buttonSize='btn--mobile'\r\n                    onClick={\r\n                      (closeMobileMenu,\r\n                      () => {\r\n                        signout(() => {\r\n                          history.push('/users/login')\r\n                        })\r\n                      })\r\n                    }>\r\n                    Sign Out\r\n                  </Button>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </IconContext.Provider>\r\n      {/*<h3>This is Organisation dashboard </h3>\r\n\r\n      <h2>{OrgDetails ? <h2>Welcome {OrgDetails}</h2> : ''}</h2>\r\n      <button\r\n        onClick={() => {\r\n          signout(() => {\r\n            history.push('/users/login')\r\n          })\r\n        }}>\r\n        signout\r\n      </button>\r\n      <br></br>\r\n      <br></br>*/}\r\n      <div className='wrapper'>\r\n        <div className='form'>\r\n          <div className='inputfield'>\r\n            <input\r\n              className='input'\r\n              placeholder='Search Patient'\r\n              value={values}\r\n              onChange={(e) => {\r\n                setValues(e.target.value)\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='inputfield'>\r\n            <button onClick={onSubmit} className='btn'>\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n      <br></br>\r\n      {displayDetails ? (\r\n        <>\r\n          {p_dets.userinfo.patient_name\r\n            ? ''\r\n            : alert('patient Details not found')}\r\n          <div className='wrapper'>\r\n            <div className='title'>Patient Basic Details : </div>\r\n            <div className='form'>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  {' '}\r\n                  Name : <b>{p_dets.userinfo.patient_name}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  {' '}\r\n                  Age : <b>{p_dets.age}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  Gender : <b>{p_dets.gender}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  Allergies : <b>{p_dets.allergies}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  Bloodgroup : <b>{p_dets.bloodgroup}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  Medication : <b>{p_dets.medication}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  Occured Condition : <b>{p_dets.occur_cond}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  Emergency Number : <b>{p_dets.emergency_no}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n              </div> \r\n              <div className='inputfield'>\r\n                <button\r\n                  className='btn'\r\n                  onClick={() => {\r\n                  history.push(\"/org/dashboard/prescription\")\r\n                  }}>\r\n                   Prescription\r\n                </button>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <button\r\n                  className='btn'\r\n                  onClick={() => {\r\n                  history.push(\"/org/dashboard/graph\",p_dets)\r\n                   \r\n                  }}>\r\n                  Graph\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrgDashboard\r\n","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\auth\\PrivateRoute.js",[],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\patientDashboard.js",["135"],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\doctorDashboard.js",["136","137","138"],"import React, { useEffect, useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { signout, getAllPatientDetails, uploadPatientReport } from '../CallingApi/patientapi'\r\nimport { FaBars, FaTimes } from 'react-icons/fa'\r\nimport { IconContext } from 'react-icons/lib'\r\nimport { Button } from '../Landing Page/Button'\r\nimport '../Landing Page/Navbar.css'\r\nimport './styles.css'\r\n\r\nfunction DoctorDashboard({ history }) {\r\n  const [PatientBasicDetails, setPatientBasicDetails] = useState([])\r\n  const [doctorDetails, setDoctorDetials] = useState('')\r\n  const [values, setValues] = useState('')\r\n  const [p_dets, setP_dets] = useState([])\r\n  const [displayDetails, setDisplayDetails] = useState(false)\r\n  const [file,setFile] = useState()\r\n\r\n  useEffect(() => {\r\n    const doc = JSON.parse(localStorage.getItem('jwt'))\r\n    setDoctorDetials(doc.user.doctor_name)\r\n    getAllPatientDetails()\r\n      .then((res) => {\r\n        setPatientBasicDetails(res)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n  const onSubmit = () => {\r\n    \r\n    const patDets = PatientBasicDetails\r\n    console.log(patDets.data)\r\n    const pat_Index = patDets.data.filter((data, i) => {\r\n      if (values === '' + data.userinfo.UID) {\r\n        return data\r\n      }\r\n    })\r\n\r\n    console.log(pat_Index[0])\r\n\r\n    if (pat_Index[0]) {\r\n      setP_dets(pat_Index[0])\r\n      if (pat_Index[0].userinfo !== '' + undefined) {\r\n        history.push(\"/doctor/AddingFeatures\" , pat_Index[0]  )\r\n      }\r\n    } else {\r\n      alert('No Pateint Found with this Unique ID')\r\n    }\r\n\r\n    //console.log(data.patient.UID);\r\n    //   patDets.data.map((data,i) => {\r\n    //       console.log(data);\r\n    //   } )\r\n  }\r\n\r\n  console.log(doctorDetails)\r\n\r\n  //for navbar\r\n  const [click, setClick] = useState(false)\r\n  const [button, setButton] = useState(true)\r\n\r\n  const handleClick = () => setClick(!click)\r\n  const closeMobileMenu = () => setClick(false)\r\n\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 960) {\r\n      setButton(false)\r\n    } else {\r\n      setButton(true)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    showButton()\r\n    window.addEventListener('resize', showButton)\r\n    return () => {\r\n      window.removeEventListener('resize', showButton)\r\n    }\r\n  }, [])\r\n const onFileChange = event => {\r\n    \r\n    // Update the state\r\n    // this.setState({ selectedFile: event.target.files[0] });\r\n   setFile(event.target.files[0])\r\n   \r\n  \r\n  };\r\n  const onFileUpload = () => {\r\n    \r\n    // Create an object of formData\r\n    const formData = new FormData();\r\n    console.log(file)\r\n    // Update the formData object\r\n    formData.set(\"report\",file)\r\n  \r\n    // Details of the uploaded file\r\n    console.log(formData);\r\n\r\n    uploadPatientReport(formData)\r\n    .then( (res) => {console.log(res)})\r\n    .catch(err => {console.log(err)})\r\n  \r\n    // Request made to the backend api\r\n    // Send formData object\r\n    // axios.post(\"api/uploadfile\", formData);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <IconContext.Provider value={{ color: '#fff' }}>\r\n        <nav className='navbar'>\r\n          <div className='navbar-container container'>\r\n            <Link\r\n              to='/patient/dashboard'\r\n              className='navbar-logo'\r\n              onClick={closeMobileMenu}>\r\n              {doctorDetails}'s Dashboard\r\n            </Link>\r\n            <div className='menu-icon' onClick={handleClick}>\r\n              {click ? <FaTimes /> : <FaBars />}\r\n            </div>\r\n            <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n              <li className='nav-btn'>\r\n                {button ? (\r\n                  <Button\r\n                    buttonStyle='btn--outline'\r\n                    onClick={() => {\r\n                      signout(() => {\r\n                        history.push('/users/login')\r\n                      })\r\n                    }}>\r\n                    Sign Out\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    buttonStyle='btn--outline'\r\n                    buttonSize='btn--mobile'\r\n                    onClick={\r\n                      (closeMobileMenu,\r\n                      () => {\r\n                        signout(() => {\r\n                          history.push('/users/login')\r\n                        })\r\n                      })\r\n                    }>\r\n                    Sign Out\r\n                  </Button>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </IconContext.Provider>\r\n      {/*<h3>This is doctor dashboard </h3>\r\n\r\n      <h2>{doctorDetails ? <h2>Welcome Dr. {doctorDetails}</h2> : ''}</h2>\r\n      <button\r\n        onClick={() => {\r\n          signout(() => {\r\n            history.push('/users/login')\r\n          })\r\n        }}>\r\n        signout\r\n      </button>\r\n      <br></br>\r\n      <br></br>\r\n      <h2>Search Patient Details</h2>\r\n      <br></br>\r\n      <input\r\n        value={values}\r\n        onChange={(e) => {\r\n          setValues(e.target.value)\r\n        }}\r\n      />\r\n      <button onClick={onSubmit}>Submit</button>\r\n      <br></br>\r\n      <br></br>\r\n      {displayDetails ? (\r\n        <>\r\n          {p_dets.userinfo.patient_name\r\n            ? ''\r\n            : alert('patient Details not found')}\r\n          <h2>Patient Basic Details : </h2>\r\n          <br></br>\r\n          <h3> Name : {p_dets.userinfo.patient_name}</h3>\r\n          <h3> Age : {p_dets.age}</h3>\r\n          <h3>Gender : {p_dets.gender}</h3>\r\n          <h3>Allergies : {p_dets.allergies}</h3>\r\n          <h3>Bloodgroup : {p_dets.bloodgroup}</h3>\r\n          <h3>Medication : {p_dets.medication}</h3>\r\n          <h3>Occured Condition : {p_dets.occur_cond}</h3>\r\n          <h3>Emergency Number : {p_dets.emergency_no}</h3>\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}*/}\r\n      <div className='wrapper'>\r\n        <div className='form'>\r\n          <div className='inputfield'>\r\n            <input\r\n              className='input'\r\n              placeholder='Search Patient'\r\n              value={values}\r\n              onChange={(e) => {\r\n                setValues(e.target.value)\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='inputfield'>\r\n            <button onClick={onSubmit} className='btn'>\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n      <br></br>\r\n      {displayDetails ? (\r\n        <>\r\n          {p_dets.userinfo.patient_name\r\n            ? ''\r\n            : alert('patient Details not found')}\r\n          <div className='wrapper'>\r\n            <div className='title'>Patient Basic Details : </div>\r\n            <div className='form'>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  {' '}\r\n                  Name : <b>{p_dets.userinfo.patient_name}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  {' '}\r\n                  Age : <b>{p_dets.age}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  Gender : <b>{p_dets.gender}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  Allergies : <b>{p_dets.allergies}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  Bloodgroup : <b>{p_dets.bloodgroup}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  Medication : <b>{p_dets.medication}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  Occured Condition : <b>{p_dets.occur_cond}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  Emergency Number : <b>{p_dets.emergency_no}</b>\r\n                </p>\r\n              </div>\r\n              <span>\r\n              <input type=\"file\"  onChange = {onFileChange}/>\r\n              <button onClick ={onFileUpload}>Upload Report </button>\r\n              </span>\r\n            </div>\r\n           \r\n          </div>\r\n         \r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DoctorDashboard\r\n","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Backend.js",[],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Data.js",[],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Landing Page\\Footer.js",[],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Landing Page\\HeroSection.js",[],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Landing Page\\Navbar.js",[],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Landing Page\\Button.js",[],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\CallingApi\\patientapi.js",[],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\DoctorUploadPanal.js",["139","140","141","142"],"import React from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport { FaBars, FaTimes } from 'react-icons/fa'\r\nimport { IconContext } from 'react-icons/lib'\r\nimport { Button } from '../Landing Page/Button'\r\nimport '../Landing Page/Navbar.css'\r\nimport './styles.css'\r\n\r\n// age: 26\r\n// allergies: \"latex and dust mites allergies\"\r\n// bloodgroup: \"O-\"\r\n// createdAt: \"2021-02-11T12:50:51.436Z\"\r\n// emergency_no: 9955894949\r\n// gender: \"M\"\r\n// medication: \"methotrexate, sulfasalazine\"\r\n// occur_cond: \"Rheumatoid Arthritis\"\r\n\r\nfunction DoctorUploadPanal({history}) {\r\n\r\n    console.log(history);\r\n\r\n    const {age,allergies,bloodgroup,createdAt,emergency_no,gender,medication,occur_cond} = history.location.state\r\n\r\n    const {patient_name} = history.location.state.userinfo\r\n\r\n    console.log(age,allergies,bloodgroup,createdAt,emergency_no,gender,medication,occur_cond)\r\n    \r\n    return (\r\n        <>\r\n        <div>\r\n            <h1>This is doctor upload panal</h1>\r\n          <Link to = \"/doctor/dashboard\"> <button>Go back To Dashboard</button> </Link> \r\n          <br></br>\r\n          <br></br>\r\n       <button onClick = {() => {history.push(\"/doctor/AddingFeatures/prescription\" , history.location.state )}} >Prescription</button> \r\n          <br></br>\r\n          <button onClick = {  ( ) => {history.push(\"/doctor/AddingFeatures/graph\", history.location.state)}  }  >Graph</button>\r\n          <br></br>\r\n        </div>\r\n        <div className='wrapper'>\r\n        <div className='form'>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  {' '}\r\n                  Name : <b>{patient_name}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  {' '}\r\n                  Age : <b>{age}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  Gender : <b>{gender}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  Allergies : <b>{allergies}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  Bloodgroup : <b>{bloodgroup}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  Medication : <b>{medication}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  Occured Condition : <b>{occur_cond}</b>\r\n                </p>\r\n              </div>\r\n              <div className='inputfield'>\r\n                <p>\r\n                  Emergency Number : <b>{emergency_no}</b>\r\n                </p>\r\n              </div>\r\n              </div>\r\n            </div>\r\n        \r\n        </>\r\n    \r\n\r\n    )\r\n}\r\n\r\nexport default DoctorUploadPanal\r\n","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\Prescription.js",["143","144","145","146","147","148","149"],"import React,{useState,useEffect} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {addPrescription,getPres} from \"../CallingApi/patientapi\"\r\n\r\n\r\nfunction Prescription({history}) {\r\n\r\n  const histor = history.location.state\r\n    const [inputList, setInputList] = useState([  { med_name: \"\", duration: \"\" }]);\r\n    const [finalList,setFinalList] = useState({})\r\n    const [result,setResult] = useState({success : \"\"  , error : \"\" })\r\n    const [message,setMessage] = useState(\"\")\r\n\r\n \r\n\r\n    useEffect(async () => {\r\n     await getPres(history.location.state.userinfo.UID).\r\n      then(res => {console.log(\"USEEFFTCT\",res)})\r\n      .catch(err => {console.log(err)})\r\n    }, [])\r\n   \r\n    // useEffect(() => {\r\n    //    console.log(\"UID\",history.location.state.userinfo.UID);\r\n     \r\n    // }, [inputList])\r\n\r\n\r\n    // handle input change\r\n    const handleInputChange = (e, index) => {\r\n      const { name, value } = e.target;\r\n      const list = [...inputList];\r\n      list[index][name] = value;\r\n      setInputList(list);\r\n    };\r\n  \r\n    const UID = history.location.state.userinfo.UID;\r\n    // handle click event of the Remove button\r\n    const handleRemoveClick = index => {\r\n      const list = [...inputList];\r\n      list.splice(index, 1);\r\n      setInputList(list);\r\n    };\r\n    const doc = JSON.parse(localStorage.getItem('jwt'))\r\n    console.log(doc.user.doctor_name)\r\n    const onsubmits = (e) => {\r\n      e.preventDefault()\r\n        var val = []\r\n        val[0] = history.location.state.userinfo.UID;\r\n        // UID : val[0]\r\n        var final_result\r\n      final_result  =  { \"Doctor\"  :  doc.user.doctor_name , \"UID\" : val[0] ,medDetails : [...inputList] }\r\n        setFinalList(final_result)\r\n        addPrescription(final_result).then(res => {setMessage(res.message)}  ).\r\n        catch(err => console.log(\"ERROR\",err))\r\n\r\n    }\r\n   \r\n    // handle click event of the Add button\r\n    const handleAddClick = () => {\r\n      setInputList([...inputList,  { med_name: \"\", duration: \"\" }]);\r\n    };\r\n\r\n    const Patient_name = history?.location.state.userinfo.patient_name;\r\n  \r\n    console.log(\"Prescription\",{history})\r\n    return (\r\n        <div>\r\n            <h1>Add Prescription Here</h1>\r\n            <Link to = \"/doctor/dashboard\"> <button>Go back To Dashboard</button> </Link> \r\n             <button onClick = { () => {history.push(\"/doctor/AddingFeatures\",history.location.state)} } >Go back Upload Panal</button> \r\n             <div className=\"App\">\r\n                 <br></br>\r\n               <h3>Check {Patient_name}'s  Previos Prescription <button onClick = { () => {history.push(\"/doctor/previousPrescriptions\",histor)} } >Check Previous Prescriptions</button> </h3>  \r\n                 \r\n      <h3 onClick = { (e) => {e.preventDefault()} } ><a href=\"\" style = {{color : 'blue'}}>Prescription</a></h3>\r\n      <br></br>\r\n      {inputList.map((x, i) => {\r\n        return (\r\n          <div className=\"box\">\r\n            <input\r\n              name=\"med_name\"\r\n              placeholder=\"Medicine Name\"\r\n              value={x.med_name}\r\n              onChange={e => handleInputChange(e, i)}\r\n            />\r\n            <input\r\n              className=\"ml10\"\r\n              name=\"duration\"\r\n              placeholder=\"duration(In Days)\"\r\n              value={x.duration}\r\n              onChange={e => handleInputChange(e, i)}\r\n            />\r\n            <select style={{ marginLeft: 20 }} name=\"Morning_dosage\" id=\"dosage\"  onChange = { (e) => handleInputChange(e,i)}>\r\n  <option value=\"select\">Morning Dosage</option>\r\n  <option value=\"Morning - 1\">1</option>\r\n  <option value=\"Morning - 2\">2</option>\r\n  <option value=\"Morning - 3\">3</option>\r\n\r\n</select>\r\n<select style={{ marginLeft: 20 }} name=\"Evening_dosage\" id=\"dosage\"  onChange = { (e) => handleInputChange(e,i,)}>\r\n  <option value=\"select\">Evening Dosage</option>\r\n  <option value=\"Evening - 1\">1</option>\r\n  <option value=\"Evening - 2\">2</option>\r\n  <option value=\"Evening - 3\">3</option>\r\n\r\n</select>\r\n            <div className=\"btn-box\">\r\n              {inputList.length !== 1 && <button\r\n                className=\"mr10\"\r\n                onClick={() => handleRemoveClick(i)}>Remove</button>}\r\n              {inputList.length - 1 === i && <button className=\"ml30\" onClick={handleAddClick}>+ Medication</button>}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      \r\n      <button onClick = {onsubmits}>Submit</button>\r\n      <div style={{ marginTop: 20 }}>{JSON.stringify(inputList)}</div>\r\n      {message ? <p style = {{color : \"green\"}} >{message}</p>  : \"\"}\r\n      { JSON.stringify(finalList) }\r\n      <p style = {{color : 'green',font : \"bold\" }}>{result.success}</p>\r\n    </div>\r\n    {/* <h1> {result.success ? <p>  {result.success}</p> : \"\"  }  </h1> */}\r\n    {/* {JSON.stringify(result)} */}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Prescription\r\n","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\Graph.js",["150","151","152","153","154","155"],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Checker.js",["156"],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\patientPrescription.js",["157","158","159","160"],"import React,{useState,useEffect} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {getPres} from \"../CallingApi/patientapi\"\r\nfunction PatientPrescription({history}) {\r\n\r\n    const [presData,setPresData] = useState([])\r\n    const [dataReceived,setDataReceived] = useState(false)\r\n\r\n     useEffect(  () => {\r\n         getPres(history.location.state).\r\n        then(data => {   console.log(data) \r\n             setPresData(data.data)}).\r\n        catch(err => {console.log(err)})\r\n        setDataReceived(true);\r\n     },[]  )       \r\n\r\n    console.log(history)\r\n\r\n//     const pres = () => {\r\n//     if(dataReceived)\r\n\r\n//       console.log(val)\r\n//     }\r\n// }\r\n    return (\r\n        <div>\r\n           <h1>This is pateint Prescription Dashboard</h1> \r\n       <Link to = \"/patient/dashboard\"> <button>Patient Dashboard</button> </Link>\r\n       <ol>\r\n       {presData.map( (data,i) => {\r\n         \r\n        const val = data.medDetails.map( (innerData,i) =>  { return <li>\r\n            \r\n            <div style = {{color : \"green\"}}>\r\n           \r\n              { i === 0 ?  <div> \r\n                    <br></br>\r\n                    <h2>Prescribed by   : Dr. {data.Doctor}  </h2>\r\n                    <h2>Data {`&`} Time  :  {data.createdAt} </h2>\r\n             <h3> \r\n              No of Medication :  {data.medDetails.length} \r\n            </h3> </div > : \"\" }\r\n            <h3>  Medicine Name : {innerData.med_name} Duration : {innerData.duration}  </h3>\r\n            <h3>Dosage : {innerData.Morning_dosage}  {innerData.Evening_dosage}</h3>\r\n                         \r\n             {console.log(i,innerData.med_name)}\r\n             </div>\r\n        \r\n              </li>  }\r\n            \r\n              )\r\n        return val\r\n      }  )  }  \r\n      </ol>  \r\n      {JSON.stringify(presData)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PatientPrescription\r\n","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\PatientGraph.js",["161","162","163"],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\OrgGraph.js",["164","165","166","167"],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\OrgAllDetails.js",[],"C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\OrgPrescription.js",["168","169","170","171","172"],"import React,{useState,useEffect} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {getPres} from \"../CallingApi/patientapi\"\r\n\r\nfunction OrgPrescription({history}) {\r\n    // console.log(history.location.state.userinfo?.UID)\r\n    const [presData,setPresData] = useState([])\r\n    const [dataReceived,setDataReceived] = useState(false)\r\n\r\n     useEffect(  () => {\r\n         getPres(history.location.state.userinfo?.UID).\r\n        then(data => {   console.log(data) \r\n             setPresData(data.data)}).\r\n        catch(err => {console.log(err)})\r\n        setDataReceived(true);\r\n     },[]  )\r\n    return (\r\n        <div>\r\n            <h1>View Prescription Here</h1>\r\n            <button onClick = { ( ) => {  history.push(\"/org/dashboard\")   }} >Organisation Dashboard</button> \r\n            <button onClick = { ( ) => {  history.push(\"/org/allDetails\", history.location.state)   }} >Organisation all details Dashboard</button>\r\n            <ol>\r\n       {presData.map( (data,i) => {\r\n         \r\n        const val = data.medDetails.map( (innerData,i) =>  { return <li>\r\n            \r\n            <div style = {{color : \"green\"}}>\r\n           \r\n              { i === 0 ?  <div> \r\n                    <br></br>\r\n                    <h2>Prescribed by   : Dr. {data.Doctor} </h2>\r\n                    <h2>Data {`&`} Time  :  {data.createdAt} </h2>\r\n             <h3> \r\n              No of Medication :  {data.medDetails.length} \r\n            </h3> </div > : \"\" }\r\n            <h3>  Medicine Name : {innerData.med_name} Duration : {innerData.duration}  </h3>\r\n            <h3>Dosage : {innerData.Morning_dosage}  {innerData.Evening_dosage}</h3>\r\n           \r\n              \r\n             {console.log(i,innerData.med_name)}\r\n             </div>\r\n        \r\n              </li>  }\r\n            \r\n              )\r\n        return val\r\n      }  )  }  \r\n      </ol>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrgPrescription\r\n","C:\\Users\\RITIKA\\Videos\\completeCapstone\\cap\\frontend\\src\\Dashboards\\previousPrescriptions.js",["173","174","175","176","177"],"import React,{useState,useEffect} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {getPres} from \"../CallingApi/patientapi\"\r\n const PreviousPrescriptions = ({history}) => {\r\n\r\n    \r\n    const UID = history?.location.state.userinfo.UID;\r\n    const patientName = history?.location.state.userinfo.patient_name\r\n    console.log(UID)\r\n\r\n    const [presData,setPresData] = useState([])\r\n    const [dataReceived,setDataReceived] = useState(false)\r\n\r\n     useEffect(  () => {\r\n         getPres(UID).\r\n        then(data => {   console.log(data) \r\n             setPresData(data.data)}).\r\n        catch(err => {console.log(err)})\r\n        setDataReceived(true);\r\n     },[]  )    \r\n\r\n    return (\r\n       \r\n        <div>\r\n            <h1>{patientName}'s Previous Prescriptions</h1>\r\n            <button onClick = {() => {history.push(\"/doctor/AddingFeatures/prescription\",history.location.state)} }>Go back to Doctor Upload</button>\r\n              { presData ? <ol>\r\n       {presData.map( (data,i) => {\r\n         \r\n        const val = data.medDetails.map( (innerData,i) =>  { return <li>\r\n            \r\n            <div style = {{color : \"green\"}}>\r\n           \r\n              { i === 0 ?  <div> \r\n                    <br></br>\r\n                    <h2>Prescribed by   : Dr. {data.Doctor}  </h2>\r\n                    <h2>Data {`&`} Time  :  {data.createdAt} </h2>\r\n             <h3> \r\n              No of Medication :  {data.medDetails.length} \r\n            </h3> </div > : \"\" }\r\n            <h3>  Medicine Name : {innerData.med_name} Duration : {innerData.duration}  </h3>\r\n            <h3>Dosage : {innerData.Morning_dosage}  {innerData.Evening_dosage}</h3>\r\n                         \r\n             {console.log(i,innerData.med_name)}\r\n             </div>\r\n        \r\n              </li>  }\r\n            \r\n              )\r\n        return val\r\n      }  )  }  \r\n      </ol> : <h1>Loading....</h1> }  \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n  \r\n\r\nexport default PreviousPrescriptions\r\n",{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":3,"column":3,"nodeType":"184","messageId":"185","endLine":3,"endColumn":7},{"ruleId":"182","severity":1,"message":"186","line":5,"column":3,"nodeType":"184","messageId":"185","endLine":5,"endColumn":11},{"ruleId":"182","severity":1,"message":"187","line":6,"column":20,"nodeType":"184","messageId":"185","endLine":6,"endColumn":26},{"ruleId":"182","severity":1,"message":"188","line":5,"column":10,"nodeType":"184","messageId":"185","endLine":5,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":34,"column":53,"nodeType":"191","messageId":"192","endLine":34,"endColumn":55},{"ruleId":"193","severity":1,"message":"194","line":106,"column":6,"nodeType":"195","endLine":106,"endColumn":28,"suggestions":"196"},{"ruleId":"182","severity":1,"message":"186","line":2,"column":16,"nodeType":"184","messageId":"185","endLine":2,"endColumn":24},{"ruleId":"182","severity":1,"message":"197","line":15,"column":26,"nodeType":"184","messageId":"185","endLine":15,"endColumn":43},{"ruleId":"189","severity":1,"message":"190","line":34,"column":53,"nodeType":"191","messageId":"192","endLine":34,"endColumn":55},{"ruleId":"182","severity":1,"message":"198","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":16},{"ruleId":"182","severity":1,"message":"199","line":3,"column":18,"nodeType":"184","messageId":"185","endLine":3,"endColumn":25},{"ruleId":"182","severity":1,"message":"200","line":4,"column":10,"nodeType":"184","messageId":"185","endLine":4,"endColumn":21},{"ruleId":"182","severity":1,"message":"201","line":5,"column":10,"nodeType":"184","messageId":"185","endLine":5,"endColumn":16},{"ruleId":"182","severity":1,"message":"202","line":11,"column":19,"nodeType":"184","messageId":"185","endLine":11,"endColumn":28},{"ruleId":"193","severity":1,"message":"203","line":16,"column":15,"nodeType":"191","endLine":20,"endColumn":6},{"ruleId":"204","severity":1,"message":"205","line":17,"column":56,"nodeType":"206","messageId":"207","endLine":17,"endColumn":57,"fix":"208"},{"ruleId":"193","severity":1,"message":"209","line":20,"column":8,"nodeType":"195","endLine":20,"endColumn":10,"suggestions":"210"},{"ruleId":"182","severity":1,"message":"211","line":36,"column":11,"nodeType":"184","messageId":"185","endLine":36,"endColumn":14},{"ruleId":"204","severity":1,"message":"205","line":53,"column":79,"nodeType":"206","messageId":"207","endLine":53,"endColumn":80,"fix":"212"},{"ruleId":"213","severity":1,"message":"214","line":75,"column":54,"nodeType":"215","endLine":75,"endColumn":92},{"ruleId":"204","severity":1,"message":"205","line":16,"column":25,"nodeType":"206","messageId":"207","endLine":16,"endColumn":26,"fix":"216"},{"ruleId":"204","severity":1,"message":"205","line":17,"column":70,"nodeType":"206","messageId":"207","endLine":17,"endColumn":71,"fix":"217"},{"ruleId":"193","severity":1,"message":"218","line":19,"column":10,"nodeType":"195","endLine":19,"endColumn":12,"suggestions":"219"},{"ruleId":"182","severity":1,"message":"220","line":23,"column":14,"nodeType":"184","messageId":"185","endLine":23,"endColumn":26},{"ruleId":"204","severity":1,"message":"205","line":33,"column":64,"nodeType":"206","messageId":"207","endLine":33,"endColumn":65,"fix":"221"},{"ruleId":"204","severity":1,"message":"205","line":36,"column":11,"nodeType":"206","messageId":"207","endLine":36,"endColumn":12,"fix":"222"},{"ruleId":"213","severity":1,"message":"214","line":30,"column":11,"nodeType":"215","endLine":30,"endColumn":22},{"ruleId":"182","severity":1,"message":"223","line":7,"column":12,"nodeType":"184","messageId":"185","endLine":7,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":10,"column":41,"nodeType":"206","messageId":"207","endLine":10,"endColumn":42,"fix":"224"},{"ruleId":"204","severity":1,"message":"205","line":12,"column":38,"nodeType":"206","messageId":"207","endLine":12,"endColumn":39,"fix":"225"},{"ruleId":"193","severity":1,"message":"226","line":15,"column":8,"nodeType":"195","endLine":15,"endColumn":10,"suggestions":"227"},{"ruleId":"182","severity":1,"message":"228","line":3,"column":9,"nodeType":"184","messageId":"185","endLine":3,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":11,"column":25,"nodeType":"206","messageId":"207","endLine":11,"endColumn":26,"fix":"229"},{"ruleId":"193","severity":1,"message":"218","line":12,"column":80,"nodeType":"195","endLine":12,"endColumn":82,"suggestions":"230"},{"ruleId":"182","severity":1,"message":"228","line":4,"column":9,"nodeType":"184","messageId":"185","endLine":4,"endColumn":23},{"ruleId":"182","severity":1,"message":"183","line":5,"column":9,"nodeType":"184","messageId":"185","endLine":5,"endColumn":13},{"ruleId":"204","severity":1,"message":"205","line":15,"column":25,"nodeType":"206","messageId":"207","endLine":15,"endColumn":26,"fix":"231"},{"ruleId":"193","severity":1,"message":"218","line":16,"column":80,"nodeType":"195","endLine":16,"endColumn":82,"suggestions":"232"},{"ruleId":"182","severity":1,"message":"183","line":2,"column":9,"nodeType":"184","messageId":"185","endLine":2,"endColumn":13},{"ruleId":"182","severity":1,"message":"223","line":8,"column":12,"nodeType":"184","messageId":"185","endLine":8,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":11,"column":55,"nodeType":"206","messageId":"207","endLine":11,"endColumn":56,"fix":"233"},{"ruleId":"204","severity":1,"message":"205","line":13,"column":38,"nodeType":"206","messageId":"207","endLine":13,"endColumn":39,"fix":"234"},{"ruleId":"193","severity":1,"message":"235","line":16,"column":8,"nodeType":"195","endLine":16,"endColumn":10,"suggestions":"236"},{"ruleId":"182","severity":1,"message":"183","line":2,"column":9,"nodeType":"184","messageId":"185","endLine":2,"endColumn":13},{"ruleId":"182","severity":1,"message":"223","line":12,"column":12,"nodeType":"184","messageId":"185","endLine":12,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":15,"column":22,"nodeType":"206","messageId":"207","endLine":15,"endColumn":23,"fix":"237"},{"ruleId":"204","severity":1,"message":"205","line":17,"column":38,"nodeType":"206","messageId":"207","endLine":17,"endColumn":39,"fix":"238"},{"ruleId":"193","severity":1,"message":"218","line":20,"column":8,"nodeType":"195","endLine":20,"endColumn":10,"suggestions":"239"},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Router' is defined but never used.","'signout' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'uid' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'SetValues(v => ...)' if you only need 'values' in the 'SetValues' call.","ArrayExpression",["242"],"'setDisplayDetails' is assigned a value but never used.","'FaBars' is defined but never used.","'FaTimes' is defined but never used.","'IconContext' is defined but never used.","'Button' is defined but never used.","'setResult' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"243","text":"244"},"React Hook useEffect has a missing dependency: 'history.location.state.userinfo.UID'. Either include it or remove the dependency array.",["245"],"'UID' is assigned a value but never used.",{"range":"246","text":"247"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"range":"248","text":"247"},{"range":"249","text":"247"},"React Hook useEffect has a missing dependency: 'UID'. Either include it or remove the dependency array.",["250"],"'resultValues' is assigned a value but never used.",{"range":"251","text":"247"},{"range":"252","text":"247"},"'dataReceived' is assigned a value but never used.",{"range":"253","text":"247"},{"range":"254","text":"247"},"React Hook useEffect has a missing dependency: 'history.location.state'. Either include it or remove the dependency array.",["255"],"'addGraphValues' is defined but never used.",{"range":"256","text":"247"},["257"],{"range":"258","text":"247"},["259"],{"range":"260","text":"247"},{"range":"261","text":"247"},"React Hook useEffect has a missing dependency: 'history.location.state.userinfo?.UID'. Either include it or remove the dependency array.",["262"],{"range":"263","text":"247"},{"range":"264","text":"247"},["265"],"no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},[582,591],"\r\n      .",{"desc":"268","fix":"269"},[1796,1807],"\r\n        .",[472,483],[544,555],{"desc":"270","fix":"271"},[1149,1160],[1250,1261],[359,370],[444,455],{"desc":"272","fix":"273"},[387,398],{"desc":"270","fix":"274"},[382,393],{"desc":"270","fix":"275"},[427,438],[512,523],{"desc":"276","fix":"277"},[502,513],[587,598],{"desc":"270","fix":"278"},"Update the dependencies array to be: [message, editDetails, uid, values]",{"range":"279","text":"280"},"Update the dependencies array to be: [history.location.state.userinfo.UID]",{"range":"281","text":"282"},"Update the dependencies array to be: [UID]",{"range":"283","text":"284"},"Update the dependencies array to be: [history.location.state]",{"range":"285","text":"286"},{"range":"287","text":"284"},{"range":"288","text":"284"},"Update the dependencies array to be: [history.location.state.userinfo?.UID]",{"range":"289","text":"290"},{"range":"291","text":"284"},[2642,2664],"[message, editDetails, uid, values]",[684,686],"[history.location.state.userinfo.UID]",[598,600],"[UID]",[528,530],"[history.location.state]",[469,471],[464,466],[596,598],"[history.location.state.userinfo?.UID]",[671,673]]